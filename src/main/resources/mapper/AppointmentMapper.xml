<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daocheng.perfectmathematical.dao.AppointmentMapper">
  <resultMap id="BaseResultMap" type="com.daocheng.perfectmathematical.pojo.Appointment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="campus_id" jdbcType="INTEGER" property="campusId" />
    <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, phone_number, grade, campus_id, appointment_time, status
  </sql>
  <select id="selectByExample" parameterType="com.daocheng.perfectmathematical.pojo.AppointmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_appointment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_appointment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.daocheng.perfectmathematical.pojo.AppointmentExample">
    delete from p_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.daocheng.perfectmathematical.pojo.Appointment">
    insert into p_appointment (id, name, phone_number, 
      grade, campus_id, appointment_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR}, #{campusId,jdbcType=INTEGER}, #{appointmentTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.daocheng.perfectmathematical.pojo.Appointment">
    insert into p_appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="campusId != null">
        campus_id,
      </if>
      <if test="appointmentTime != null">
        appointment_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="campusId != null">
        #{campusId,jdbcType=INTEGER},
      </if>
      <if test="appointmentTime != null">
        #{appointmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daocheng.perfectmathematical.pojo.AppointmentExample" resultType="java.lang.Long">
    select count(*) from p_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <resultMap id="AppointWithCampusResultMap" type="com.daocheng.perfectmathematical.pojo.Appointment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="campus_id" jdbcType="INTEGER" property="campusId" />
    <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="campus" javaType="com.daocheng.perfectmathematical.pojo.Campus">
      <id property="id" column="scId"/>
      <result property="campusName" column="campusName"/>
      <result property="campusAddress" column="campusAddress"/>
    </association>
    <!--<association property="statusTotal" column="status" select="status"/>-->
  </resultMap>

    <select id="selectByPage" resultMap="AppointWithCampusResultMap">
         select pa.*,sc.id scId,sc.campus_name campusName,sc.campus_address campusAddress from p_appointment pa left join sys_campus sc on pa.campus_id = sc.id where
         <if test=" status == -1">
           pa.status is not null
         </if>
        <if test=" status == 0">
          pa.status = #{status}
        </if>
        <if test=" status == 1">
          pa.status = #{status}
        </if>
    </select>

  <update id="updateByExampleSelective" parameterType="map">
    update p_appointment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.campusId != null">
        campus_id = #{record.campusId,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentTime != null">
        appointment_time = #{record.appointmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_appointment
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      campus_id = #{record.campusId,jdbcType=INTEGER},
      appointment_time = #{record.appointmentTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daocheng.perfectmathematical.pojo.Appointment">
    update p_appointment
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="campusId != null">
        campus_id = #{campusId,jdbcType=INTEGER},
      </if>
      <if test="appointmentTime != null">
        appointment_time = #{appointmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daocheng.perfectmathematical.pojo.Appointment">
    update p_appointment
    set name = #{name,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      campus_id = #{campusId,jdbcType=INTEGER},
      appointment_time = #{appointmentTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>